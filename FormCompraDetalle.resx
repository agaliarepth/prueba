<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="vender.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fZvY/gcrxmCue5DBagAAAABJRU5ErkJggg==
</value>
  </data>
</root>